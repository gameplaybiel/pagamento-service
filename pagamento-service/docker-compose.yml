services:
  # RabbitMQ (comunicação entre serviços)
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - tcc-network

  # Banco do Cliente (separado para cliente-service)
  postgres-cliente:
    image: postgres:13
    environment:
      POSTGRES_USER: cliente
      POSTGRES_PASSWORD: gabriel18
      POSTGRES_DB: cliente_db
    ports:
      - "5433:5432"  # Mapeia para 5433 no host para evitar conflito
    volumes:
      - cliente-data:/var/lib/postgresql/data
    networks:
      - tcc-network

  # Banco do Pedido (para pedido-service)
  postgres-pedido:
    image: postgres:13
    environment:
      POSTGRES_USER: pedido
      POSTGRES_PASSWORD: gabriel18
      POSTGRES_DB: pedidodb
    ports:
      - "5434:5432"  # Mapeia para 5434 no host
    volumes:
      - pedido-data:/var/lib/postgresql/data
    networks:
      - tcc-network

  # Banco do Pagamento (para pagamento-service)
  postgres-pagamento:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gabriel18
      POSTGRES_DB: pagamento_db
    ports:
      - "5435:5432"  # Mapeia para 5435 no host
    volumes:
      - pagamento-data:/var/lib/postgresql/data
    networks:
      - tcc-network

  # Aplicação Pagamento-Service (sua aplicação Spring Boot)
  pagamento-service:
    build:
      context: .  # Assume que o Dockerfile está na raiz do projeto
      dockerfile: Dockerfile
    ports:
      - "8084:8084"  # Porta da aplicação
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_RABBITMQ_HOST: rabbitmq  # Nome do serviço no compose
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-pagamento:5432/pagamentodb
      SPRING_DATASOURCE_USERNAME: pagamento
      SPRING_DATASOURCE_PASSWORD: gabriel18
    depends_on:
      - rabbitmq
      - postgres-pagamento
    networks:
      - tcc-network

volumes:
  cliente-data:
  pedido-data:
  pagamento-data:

networks:
  tcc-network:
    driver: bridge